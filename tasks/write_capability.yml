- name: '[BAMBOO] Check capability file variable'
  fail:
    msg: "Variable 'bambooagent_capability_file' is not defined"
  when: bambooagent_capability_file is undefined

- name: '[BAMBOO] Summarize all capabilities'
  debug:
    msg: "[CAP] '{{ item.key.strip() | replace('\\n', '') | replace('\\r', '') }}' => '{{ item.value.strip() | replace('\\n', '') | replace('\\r', '') }}'"
  loop: "{{ bamboo_capabilities | dict2items }}"
  tags:
  - capability

- name: '[BAMBOO] Check if the agent file exists'
  stat:
    path: "{{ bambooagent_capability_file }}"
  register: stat_result

- name: Create root directory if file does not exist
  file:
    path: "{{ bambooagent_capability_file | dirname }}"
    state: directory
    recurse: yes
    owner: "{{ bambooagent_user }}"
    group: "{{ bambooagent_group }}"
    mode: "u+rwx,g+rx,o+rx"
  when: not stat_result.stat.exists

- name: Create the agent file, if it doesnt exist already
  file:
    path: "{{ bambooagent_capability_file }}"
    state: touch
    mode: "u+r,g+r,o+r"
  when: not stat_result.stat.exists

- name: '[BAMBOO] Flush the capabilities into the agents file'
  lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: present
    regexp: "^{{ item.key.strip() | replace('\\n', '') | replace('\\r', '') }}="
    line: "{{ item.key.strip() | replace('\\n', '') | replace('\\r', '') }}={{ item.value.strip() | replace('\\n', '') | replace('\\r', '') }}"
  loop: "{{ bamboo_capabilities | dict2items }}"
  tags:
  - capability:write
  when:
    - ansible_os_family != "Windows"

- name: '[BAMBOO] Remove empty lines from the capability file'
  lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: absent
    regexp: "^\\s*$"
  tags:
  - capability:write
  when:
    - ansible_os_family != "Windows"

- name: '[BAMBOO] Remove capabilities from agents'
  lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: absent
    regexp: "^{{ item.strip() | replace('\\n', '') | replace('\\r', '') }}="
  loop: "{{ bamboo_capabilities_to_remove | default([])  }}"
  tags:
  - capability:write
  when:
    - ansible_os_family != "Windows"



# what a nightmare to escape \ with YAML...
- name: '[BAMBOO] Flush the capabilities into the agents file'
  win_lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: present
    regexp: "^{{ item.key.strip() | replace('\\n', '') | replace('\\r', '') }}="
    line: >-
       {{ item.key.strip()
         | replace('\\n', '')
         | replace('\\r', '') }}={{ item.value.strip()
                                    | replace('\\n', '')
                                    | replace('\\r', '')
                                    | regex_replace('(?<!\\)\\(?!\\)', '\\\\') }}
  loop: "{{ bamboo_capabilities | dict2items }}"
  tags:
  - capability:write
  when:
    - ansible_os_family == "Windows"

- name: '[BAMBOO] Remove empty lines from the capability file'
  win_lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: absent
    regexp: "^\\s*$"
  tags:
  - capability:write
  when:
    - ansible_os_family == "Windows"

- name: '[BAMBOO] Remove capabilities from agents'
  win_lineinfile:
    dest: "{{ bambooagent_capability_file }}"
    state: absent
    regexp: "^{{ item.strip() | replace('\\n', '') | replace('\\r', '') }}="
  loop: "{{ bamboo_capabilities_to_remove | default([]) }}"
  tags:
  - capability:write
  when:
    - ansible_os_family == "Windows"
